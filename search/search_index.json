{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Coded with the sysadmin in mind.</p>"},{"location":"#about-facilemanager","title":"About facileManager","text":"<p>Managing a server farm shouldn't be difficult. It shouldn't be monotonous either. This is where facileManager comes in.</p> <p>facileManager is a framework for a modular suite of web apps built with the system administrator in mind. Say good-bye to manual management of services running on multiple servers.</p> <p>There are several software apps available that do a great job of managing one server, so facileManager is developed to overcome that limitation for sysadmins that work with a server farm where multiple servers are to be configured identically. Why manually edit server configuration files and push them out to all servers when you can have a web interface aid in the configuration and backend scripts perform the push or pull mechanism? There should no longer be a need.</p> <p>facileManager is modular in design so you don't have to weed out the unnecessary modules for your environment - just have the ones you need installed. As more modules get developed, you can download and install them individually, too. The only requirement is to have the facileManager core package installed so the modules can function.</p> <p>We truly hope your lives as system administrators will be eased with facileManager.</p>"},{"location":"#facilemanager-is-free-but-your-support-helps","title":"facileManager is free, but your support helps","text":"<p>Maintaining free, open-source, and privacy-respecting software has associated expenses that we gladly cover out-of-pocket to keep the project maintained.  However, if you'd like to contribute, below are some ways.</p>"},{"location":"#donations","title":"Donations","text":"<p>We welcome financial donations using the link below to help offset a portion of our monthly expenses and methods to potentially increase our presense:</p> <ul> <li>Donate via PayPal</li> </ul>"},{"location":"#alternative-support","title":"Alternative support","text":"<p>Contributing financially is not the only way to support the project -- there are other ways you can help support us:</p> <ul> <li>Spread the word: Tell others about our software and how you have benefited from it</li> <li>Test, test, test: One of the most important things we want to release is bug-free software. Your help can really benefit us by providing feedback on our pre-releases (and even our releases). Just download, test, and provide your feedback to us. Choose the software tree you'd like to download and test at a minimum and facileManager will notify you when new versions are available for testing and use.</li> </ul> <p></p>"},{"location":"#contributing-via-github","title":"Contributing via GitHub","text":"<p>facileManager and its modules would not be what it is today with the many bugs, features, and pull requests that have been submitted.</p> <p>No contribution is too great or too small for us to review. Please add your submission, but please do fill out our template as it helps us to quickly understand your idea or reproduce the bug.</p>"},{"location":"#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"faq/","title":"FAQ","text":"<p>The purpose of this guide is to address some frequently asked questions among users of facileManager and its modules.</p> <p>If you would like to see a new FAQ that you think would assist other users, start a discussion or open an issue.</p>"},{"location":"faq/#why-is-admin-modulesphp-not-found","title":"Why is admin-modules.php not found?","text":"<p>In order for admin-modules.php to work, the <code>.htaccess</code> file must be present in your directory root (with all other fM files) and must contain this content.</p> <p>In addition, <code>AllowOverride All</code> must be present in your <code>&lt;Directory /path/to/fM&gt;</code> directive on your web server.</p>"},{"location":"faq/#how-do-i-import-the-entire-bind-configuration","title":"How do I import the entire BIND configuration?","text":"<p>This is currently not supported as the fmDNS import tool only supports importing views and zones.</p>"},{"location":"issues/","title":"Reporting Issues","text":""},{"location":"issues/#overview","title":"Overview","text":"<p>facileManager and its modules comes as free software and without warranty. The community of developers who contribute to this project make every effort to deliver software without defects. However, no software is perfect. You can help us improve this project by accurately describing your issue.</p>"},{"location":"issues/#issue-policy","title":"Issue policy","text":"<p>This project is currently led by one developer (@WillyXJ) in his spare time. Please respect our developers' time by using issues for reporting bugs only.</p> <p>The project FAQ is continuously updated with answers to many common questions. Refer to this first before creating a new issue.</p> <p>Use the discussions to post questions.</p>"},{"location":"issues/#guidelines","title":"Guidelines","text":"<p>You can help us improve this project by accurately describing defects. To that end, these guidelines have been established to streamline the reporting process: </p> <ol> <li>Please read and follow the Contributors Guide. </li> <li>Provide useful detail to reproduce your issue. \"Doesn't work\" or \"not working\" is not a valid report.</li> <li>If an issue is unclear or needs further information, it will be labeled with <code>awaiting-user</code>.</li> <li>Inactive issues will be handled by the github-actions bot.</li> </ol>"},{"location":"issues/#submitting-an-issue","title":"Submitting an issue","text":"<p>If your issue persists after searching the repository issues and consulting the FAQ, please provide as much detailed information as possible to help us understand the issue and reproduce it. Use the provided issue template as incomplete issue reports will not be considered.</p>"},{"location":"admin/client.php/","title":"client.php","text":"<p>Most modules make use of a client app, but some may not. The modules with a client will have a <code>client.php</code> file found in <code>/usr/local/facileManager/&lt;module_name&gt;/</code> and it will utilize core functionality found in facileManager-core. The purpose of the client app is to be an agent for the module in order to update the system configuration.</p> <p>Here we will break down the parameters available to all client apps.</p> <p>You can always invoke the client help file at the CLI: <pre><code>php client.php help\n</code></pre></p>"},{"location":"admin/client.php/#core-parameters","title":"Core Parameters","text":""},{"location":"admin/client.php/#-h-help","title":"-h | help","text":"<p>Invokes the client help file and exits.</p> <p>Example</p> <pre><code>php client.php help\n</code></pre>"},{"location":"admin/client.php/#-v-version","title":"-v | version","text":"<p>Print the client app version and exits.</p> <p>Example</p> <pre><code>php client.php version\n</code></pre>"},{"location":"admin/client.php/#-c-cron","title":"-c | cron","text":"<p>If the client is setup to receive updates from the facileManager server via cron, this parameter will invoke the client to check for any pending configurations. This is also the parameter used to define the crontab job during installation.</p> <p>Example</p> <pre><code>sudo php client.php cron\n</code></pre> <p>Note</p> <p>This parameter only works if the client is configured to receive updates via cron.</p>"},{"location":"admin/client.php/#-b-buildconf","title":"-b | buildconf","text":"<p>The client app exists to build the configuration for the system. Use this parameter to build the server configuration and associated files.</p> <p>Example</p> <pre><code>sudo php client.php buildconf\n</code></pre>"},{"location":"admin/client.php/#-d-debug","title":"-d | debug","text":"<p>Sometimes your desired configuration may not get deployed to the client and enabling debug mode will provide more information which may help in troubleshooting.</p> <p>Example</p> <pre><code>sudo php client.php buildconf debug\n</code></pre>"},{"location":"admin/client.php/#-n-dryrun","title":"-n | dryrun","text":"<p>Instead of applying the configuration on the client, this parameter will show you want will be applied without saving any files.</p> <p>Example</p> <pre><code>php client.php buildconf dryrun\n</code></pre>"},{"location":"admin/client.php/#-p-purge","title":"-p | purge","text":"<p>There may be old configuration files (or files unmaintained by fM and its modules) that you want to delete.</p> <p>Example</p> <pre><code>sudo php client.php buildconf purge\n</code></pre>"},{"location":"admin/client.php/#-s-no-ssl","title":"-s | no-ssl","text":"<p>This parameter will force the client to communicate with the fM server via http only.</p> <p>Example</p> <pre><code>sudo php client.php buildconf no-ssl\n</code></pre>"},{"location":"admin/client.php/#no-sudoers","title":"no-sudoers","text":"<p>During the client installation, use this parameter to prevent the necessary sudoers entry from being made. This might be useful if you maintain the sudoers files by other means.</p> <p>Example</p> <pre><code>sudo php client.php install no-sudoers\n</code></pre>"},{"location":"admin/client.php/#no-update","title":"no-update","text":"<p>The client will send information to the server about itself (OS, OS version, client version, app version). This parameter will prevent the information from being sent and populating the database.</p> <p>Example</p> <pre><code>sudo php client.php install no-update\n</code></pre>"},{"location":"admin/client.php/#apitest","title":"apitest","text":"<p>Use this parameter to test the API communication.</p> <p>Example</p> <pre><code>php client.php apitest\n</code></pre>"},{"location":"admin/client.php/#install","title":"install","text":"<p>This parameter invokes the client installer which asks a series of questions to correctly configure the client.</p> <p>Example</p> <pre><code>sudo php client.php install\n</code></pre>"},{"location":"admin/client.php/#-o-options","title":"-o | options","text":"<p>This can only be used in conjuction with <code>install</code>. Instead of being prompted during installation, this parameter followed by the desired options will be passed to the installer.</p> <p>Valid options:</p> Option Description <code>FMHOST</code> fM host URL <code>SERIALNO</code> Server serial number (or 0 to auto-generate) <code>method</code> Update method to use (cron, ssh, http) <p>Example</p> <pre><code>sudo php client.php install -o FMHOST=https://example.com/fm/,method=cron\nsudo php client.php install options FMHOST=fm.example.com,SERIALNO=0,method=ssh\n</code></pre>"},{"location":"admin/client.php/#upgrade","title":"upgrade","text":"<p>This parameter will upgrade the client app to the latest available version.</p> <p>Example</p> <pre><code>sudo php client.php upgrade\n</code></pre>"},{"location":"admin/client.php/#reinstall","title":"reinstall","text":"<p>This parameter invokes the installer on a previously installed client.</p> <p>Example</p> <pre><code>sudo php client.php reinstall\n</code></pre>"},{"location":"admin/client.php/#fmdhcp-parameters","title":"fmDHCP Parameters","text":"<p>fmDHCP has additional parameters that can be passed to <code>client.php</code> that are specific to this module.</p>"},{"location":"admin/client.php/#-l-dumpdelete","title":"-l (dump|delete)","text":"<p>Leases can be managed by invoking <code>-l</code> followed by an option to <code>dump</code> or <code>delete</code> them.</p> <p>Example</p> <pre><code>sudo php client.php -l dump\nsudo php client.php -l delete=10.1.1.100\n</code></pre>"},{"location":"admin/client.php/#-o-humanweb","title":"-o <code>&lt;(human|web)&gt;</code>","text":"<p>When dumping the leases, you can specify the output style -- either <code>human</code>-readable or used for <code>web</code>.</p> <p>Example</p> <pre><code>sudo php client.php -l dump -o web\n</code></pre>"},{"location":"admin/client.php/#fmdns-parameters","title":"fmDNS Parameters","text":"<p>fmDNS has additional parameters that can be passed to <code>client.php</code> that are specific to this module.</p>"},{"location":"admin/client.php/#dump-cache","title":"dump-cache","text":"<p>This parameter will dump the DNS cache via <code>rndc dumpdb -cache</code> and display the contents of the <code>dump-file</code> file (if it's configured in the <code>named.conf.*</code>files).</p> <p>Example</p> <pre><code>sudo php client.php dump-cache\n</code></pre>"},{"location":"admin/client.php/#clear-cache","title":"clear-cache","text":"<p>This parameter clears the DNS cache via <code>rndc flush</code>.</p> <p>Example</p> <pre><code>sudo php client.php clear-cache\n</code></pre>"},{"location":"admin/client.php/#-d-d-f-pathtozonesconf","title":"-D  | -D -f /path/to/zones.conf <p>This parameter dumps zone data to <code>STDOUT</code> and in required by <code>dump-zone</code>. It will dump data for a single zone by passing <code>-D &lt;zone_name&gt;</code> or it will dump data for multiple zones by passing <code>-f /path/to/zones.conf</code>.</p>  <p>Example</p> <pre><code>sudo php client.php dump-zone -D test-domain.com\nsudo php client.php dump-zone -f /etc/bind/zones/master/zones.conf\n</code></pre>","text":""},{"location":"admin/client.php/#-z-zones","title":"-z | zones <p>Instead of building all configuration files for bind (i.e. using <code>buildconf</code>), only the zone data will be built and reloaded using this parameter.</p>  <p>Example</p> <pre><code>sudo php client.php zones\n</code></pre>","text":""},{"location":"admin/client.php/#idid","title":"id=<code>&lt;ID&gt;</code> <p>Building and reloading the zone data for a single zone can be achieved by passing the zone ID with <code>zones</code>.</p>  <p>Example</p> <pre><code>sudo php client.php zones id=3\n</code></pre>","text":""},{"location":"admin/client.php/#install-url-only","title":"install url-only <p>In order to use URL resource records, you may want to install the client component on a server that is not a DNS server. This parameter will install the client app for URL RR use only.</p>  <p>Example</p> <pre><code>sudo php client.php install url-only\n</code></pre>","text":""},{"location":"admin/client.php/#enable-url","title":"enable url <p>An fmDNS client that has already been installed can get enabled to serve URL resource records.</p>  <p>Example</p> <pre><code>sudo php client.php enable url\n</code></pre>","text":""},{"location":"admin/client.php/#api-usage","title":"API Usage <p>The API can be invoked with the client app to manage records instead of using the web interface. While not as robust as the web interface, there are a number of supported parameters:</p> <pre><code>    setHost                  Invokes the API functionality\n    action=XX                Defines API action to take on a record (add, update, delete)\n    type=XX                  Defines the RR type (A, AAAA, CNAME, DNAME, MX, NS, PTR, TXT)\n    name=XX                  Defines the name of the RR\n    value=XX                 Defines the value of the RR\n    ttl=XX                   Defines the TTL of the RR\n    priority=XX              Defines the priority of the RR (MX only)\n    append=XX                Defines whether to append the domain or not (yes, no)\n    comment=XX               Defines the record comment\n    status=XX                Defines the record status (active, disabled)\n    newname=XX               Defines the new record name (when action=update)\n    newvalue=XX              Defines the new record value (when action=update)\n    reload=XX                Defines whether to reload the zone or not (yes, no)\n</code></pre>  <p>Note</p> <p><code>setHost</code> is a required parameter which invokes the API functionality.</p>   <p>Example</p> <pre><code>php client.php setHost id=36 action=add name=www value=1.2.3.4 type=A ttl=500 createPTR=yes comment=\"some comment\" status=active`\nphp client.php setHost id=36 action=update name=\"@\" newvalue=10.0.0.2 type=A reload=yes\n</code></pre>","text":""},{"location":"admin/client.php/#fmwifi-parameters","title":"fmWifi Parameters","text":"<p>fmWifi has additional parameters that can be passed to <code>client.php</code> that are specific to this module.</p>"},{"location":"admin/client.php/#blockmac-address","title":"block=<code>&lt;MAC Address&gt;</code> <p>This parameter will block the specified MAC address from connecting to the access point.</p>  <p>Example</p> <pre><code>sudo php client.php block=00:11:22:aa:bb:cc\n</code></pre>","text":""},{"location":"admin/client.php/#-e-ebtables","title":"-e | ebtables <p>This parameter will block the specified MAC address from connecting to the access point using ebtables.</p>  <p>Example</p> <pre><code>sudo php client.php block=00:11:22:aa:bb:cc -e\n</code></pre>","text":""},{"location":"admin/client.php/#show-clients","title":"show-clients <p>This parameter will provide a list of connected clients.</p>  <p>Example</p> <pre><code>sudo php client.php show-clients\n</code></pre>","text":""},{"location":"admin/client.php/#status","title":"status <p>This parameter will show the current status of the access point.</p>  <p>Example</p> <pre><code>sudo php client.php status\n</code></pre>","text":""},{"location":"admin/client.php/#status-all","title":"status-all <p>This parameter will show the full status of the access point.</p>  <p>Example</p> <pre><code>sudo php client.php status-all\n</code></pre>","text":""},{"location":"admin/client.php/#-o-humanweb_1","title":"-o <code>&lt;(human|web)&gt;</code> <p>This parameter will format the output either for <code>human</code>-readable or for <code>web</code>. This is to be used with <code>show-clients</code>, <code>status</code>, and <code>status-all</code>.</p>  <p>Example</p> <pre><code>sudo php client.php status -o web\n</code></pre>","text":""},{"location":"admin/client.php/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"admin/config.inc.php/","title":"config.inc.php","text":"<p>The configuration file consists of variables ranging from database connection details to disabling features.</p>"},{"location":"admin/config.inc.php/#database-credentials","title":"Database Credentials","text":"<p>These variables are set during installation.</p>"},{"location":"admin/config.inc.php/#__fm_configdbhost","title":"<code>$__FM_CONFIG['db']['host']</code>","text":"<p>The hostname or IP address containing the database.</p> <p>Example</p> <pre><code>$__FM_CONFIG['db']['host'] = 'localhost';\n</code></pre>"},{"location":"admin/config.inc.php/#__fm_configdbuser","title":"<code>$__FM_CONFIG['db']['user']</code>","text":"<p>The username used to connect to the database.</p> <p>Example</p> <pre><code>$__FM_CONFIG['db']['user'] = 'fM';\n</code></pre>"},{"location":"admin/config.inc.php/#__fm_configdbpass","title":"<code>$__FM_CONFIG['db']['pass']</code>","text":"<p>The passphrase used to connect to the database.</p> <p>Example</p> <pre><code>$__FM_CONFIG['db']['pass'] = 'secret-passphrase';\n</code></pre>"},{"location":"admin/config.inc.php/#__fm_configdbname","title":"<code>$__FM_CONFIG['db']['name']</code>","text":"<p>The database name.</p> <p>Example</p> <pre><code>$__FM_CONFIG['db']['name'] = 'facileManager';\n</code></pre>"},{"location":"admin/config.inc.php/#database-ssl-connection-settings","title":"Database SSL connection settings","text":"<p>If your database is optionally secured with SSL then you can specify the certificate details.</p>"},{"location":"admin/config.inc.php/#__fm_configdbkey","title":"<code>$__FM_CONFIG['db']['key']</code>","text":"<p>The key file path.</p> <p>Example</p> <pre><code>$__FM_CONFIG['db']['key'] = '/path/to/ssl.key';\n</code></pre>"},{"location":"admin/config.inc.php/#__fm_configdbcert","title":"<code>$__FM_CONFIG['db']['cert']</code>","text":"<p>The certificate file path.</p> <p>Example</p> <pre><code>$__FM_CONFIG['db']['cert'] = '/path/to/ssl.cer';\n</code></pre>"},{"location":"admin/config.inc.php/#__fm_configdbca","title":"<code>$__FM_CONFIG['db']['ca']</code>","text":"<p>The CA certificate path.</p> <p>Example</p> <pre><code>$__FM_CONFIG['db']['ca'] = '/path/to/ca.pem';\n</code></pre>"},{"location":"admin/config.inc.php/#__fm_configdbcapath","title":"<code>$__FM_CONFIG['db']['capath']</code>","text":"<p>The directory path containing trusted CA files.</p> <p>Example</p> <pre><code>$__FM_CONFIG['db']['capath'] = '/path/to/trusted/cas';\n</code></pre>"},{"location":"admin/config.inc.php/#__fm_configdbcipher","title":"<code>$__FM_CONFIG['db']['cipher']</code>","text":"<p>The cipher to use.</p> <p>Example</p> <pre><code>$__FM_CONFIG['db']['cipher'] = null;\n</code></pre>"},{"location":"admin/config.inc.php/#disable-features","title":"Disable Features","text":"<p>Sometimes it may be necessary to disable a feature (or functional check) based on your environment.</p>"},{"location":"admin/config.inc.php/#fm_no_auth","title":"<code>FM_NO_AUTH</code>","text":"<p>If all super-admin users get locked out, the authentication can be disabled.  This will set Authentication Method to None in the Settings \u2192 General.</p> <p>Example</p> <pre><code>define('FM_NO_AUTH', true);\n</code></pre> <p>You should remove this configuration entry once the authentication method is reset otherwise it will continue to get reset.</p>"},{"location":"admin/config.inc.php/#fm_no_htaccess","title":"<code>FM_NO_HTACCESS</code>","text":"<p>facileManager performs checks to ensure the .htaccess file is present in the document root. In some cases, it may be necssary to disable the check. For example, you may opt to put the contents in the virtual host directive of your web server configuration.</p> <p>Example</p> <pre><code>define('FM_NO_HTACCESS', true);\n</code></pre>"},{"location":"admin/config.inc.php/#fm_no_rewrite_test","title":"<code>FM_NO_REWRITE_TEST</code>","text":"<p>facileManager performs checks to ensure the rewrites (typically found in .htaccess) are working properly. In some cases, it may be necessary to disable the check. For example, you may need to disable this check if your web server is behind a proxy.</p> <p>Example</p> <pre><code>define('FM_NO_REWRITE_TEST', true);\n</code></pre>"},{"location":"admin/config.inc.php/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"admin/manage-modules/","title":"Module Management","text":"<p>Without modules, facileManager is pretty useless. The module directory allows you to find, learn about, and download the pieces that will make your job as a sysadmin easier. All of the modules in the online directory currently come included with the complete download package.</p> <p>If you want to download an individual module because you are building from the bare minimum (core package) or a new module was released after your installation, you can grab the package from the module directory.</p>"},{"location":"admin/manage-modules/#install-modules","title":"Install Modules","text":""},{"location":"admin/manage-modules/#server","title":"Server","text":"<p>Once the desired module has been downloaded and extracted, move the module directory to your web server installation path.</p> <p>Example</p> <pre><code>wget https://www.facilemanager.com/download/module/fmwifi-0.7.0.tar.gz\ntar zxf fmwifi-0.7.0.tar.gz \nmv facileManager/server/fm-modules/fmWifi /var/www/html/facileManager/fm-modules/\n</code></pre> <p>Point your browser to your server URL and go to Modules.  The newly added module is now displayed in the list, but is not yet installed -- the files are present, but the database is not setup.</p> <p>Click Install Now to install the module.</p> <p></p>"},{"location":"admin/manage-modules/#client","title":"Client","text":"<p>If a module has a client app (a client directory will exist in the tar file), you will need to install it on the client system you will manage.</p> <p>Example</p> <pre><code>wget https://www.facilemanager.com/download/module/fmwifi-0.7.0.tar.gz\ntar zxf fmwifi-0.7.0.tar.gz \nmv facileManager/client/facileManager/fmWifi /usr/local/facileManager/\n</code></pre> <p>Note</p> <p>The facileManager-core client files are necessary to install before the module client files.</p> <p>Complete the client installation by running the <code>client.php</code> script.</p> <p>Example steps to install the fmWifi module</p> <p><code>sudo php /usr/local/facileManager/fmWifi/client.php install</code></p>"},{"location":"admin/manage-modules/#activate-modules","title":"Activate Modules","text":"<p>Installed modules cannot be used until they get activated.</p> <p></p> <p>Click Activate below the module name to activate it.</p> <p>Now the module is installed, activated, and ready to be used.  You can switch between modules by selecting it in the hamburger menu in the upper right.</p> <p></p>"},{"location":"admin/manage-modules/#deactivate-modules","title":"Deactivate Modules","text":"<p>If you ever want to deactivate a module, simply click Deactivate below the module name.</p> <p></p> <p>Note</p> <p>This does not delete any data from the database nor filesystem.  This action simply disables the use of the module.</p>"},{"location":"admin/manage-modules/#uninstall-modules","title":"Uninstall Modules","text":"<p>If you ever want to uninstall a module, you first need to deactivate it and then click Uninstall below the module name.</p> <p></p> <p>Warning</p> <p>This will delete all associated records and tables from the database, but will leave the files intact on the filesystem.</p>"},{"location":"admin/manage-modules/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"admin/manage-users/","title":"Users & Groups","text":"<p>facileManager incorporates the use of multiple user accounts with granular permissions. This way you can limit access to your environment.</p> <p>You can add, modify, and delete user accounts at Admin \u2192 Users &amp; Groups.</p>"},{"location":"admin/manage-users/#local-options","title":"Local Options","text":"<p>User accounts can be local or from LDAP. For local users, there are some options you can select:</p> <p><code>Force Password Change at Next Login</code></p> <p>Tick this box the user should be forced to change their password next time they try to login.</p> <p><code>Template User</code></p> <p>Tick this box if this user should be a template user only. These users cannot be enabled and cannot login to facileManager. Any user account of this type will be depicted with a  next to the user name.</p>"},{"location":"admin/manage-users/#permissions","title":"Permissions","text":"<p>For all users (and groups), each permission checkbox will grant or deny access to certain functionalities within facileManager.</p> <p><code>Super Admin</code></p> <p>This permission will grant the user unrestricted access to the entire facileManager environment. There must be at least one Super Admin. Any user account with this privilege will be depicted with a  next to the user name.</p> <p><code>Module Management</code></p> <p>With this permission, the user will be able to activate, deactivate, install, upgrade, and uninstall modules within facileManager.</p> <p><code>User Management</code></p> <p>This permission allows the user to add, modify, and delete user accounts.</p> <p><code>Run Tools</code></p> <p>This permission grants the user access to run the various tools in Admin \u2192 Tools.</p> <p><code>Manage Settings</code></p> <p>This permission grants the user access to change system settings at Settings \u2192 General.</p> <p>New user accounts can be created quickly from a template by duplicating the template user. This will prompt you for the new username and password while giving you the ability to change any other settings prior to user creation.</p> <p>User groups can also be created to easily provide the same level of access to multiple user accounts.</p> <p>The User Management or Super Admin permission is required for these actions.</p> <p>When API Support is enabled at Settings \u2192 General, each user may create an API keypair by editing their user profile. Privileged users will be able change the status of any keypair through Admin \u2192 Users &amp; Groups. This keypair allows the user to authenticate via the API through the client scripts.</p>"},{"location":"admin/manage-users/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"admin/servers/","title":"Server Interaction","text":""},{"location":"admin/servers/#enable-server","title":"Enable Server","text":"<p>Once you have the module activated and the client app installed (if applicable) on your servers, you will want to review the configuration to make sure the installer grabbed the correct information.</p> <p>Go to Config \u2192 Servers and review the servers.  Once everything is correct, you can enable the server by clicking on the slider in the Actions column of the server listing.</p> <p></p> <p>The Server Management or Super Admin permission is required to add, edit, and delete servers.</p>"},{"location":"admin/servers/#preview-configuration","title":"Preview Configuration","text":"<p>The configuration for each server can be previewed by going to Config \u2192 Servers and click on the magnifying glass in the Actions column of the server to preview.</p> <p></p>"},{"location":"admin/servers/#build-configuration","title":"Build Configuration","text":"<p>Any time a server's configuration needs to be built, the background will turn blue to signify the server needs a configuration built.</p> <p></p> <p>When you are ready to build the configuration and deploy it, there are three ways of accomplishing this:</p> <p>Wrench icon</p> <p>Click on the wrench (or spanner) icon in the server actions column.</p> <p></p> <p>Bulk action</p> <p>Tick the box for each server you want to build the configuration for and select Config Build from the Bulk Actions menu and then click Apply.</p> <p></p> <p>Process all updates</p> <p>Click the Process all updates icon in the upper right.</p> <p></p> <p>Warning</p> <p>This will process all available updates for all servers and zones.</p> <p>The Build Server Configs or Super Admin permission is required to build the server configurations.</p>"},{"location":"admin/servers/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"admin/settings/","title":"Settings","text":"<p>facileManager has its core settings which can be adjusted and several modules have additional settings specific to the application.</p>"},{"location":"admin/settings/#general","title":"General","text":"<p>There are several settings available to set at Settings \u2192 General.</p> <p>The Manage Settings or Super Admin permission is required to change settings.</p>"},{"location":"admin/settings/#authentication","title":"Authentication","text":"<p>There are three types of authentication supported by facileManager:</p> <p><code>None</code></p> <p>Every user will be automatically logged in as the default super-admin account that was created during the installation process.</p> <p><code>Built-in Authentication</code></p> <p>Authenticates against the facileManager database using solely the users defined at Admin \u2192 Users.</p> <p><code>LDAP Authentication</code></p> <p>Users are authenticated against a defined LDAP server. Upon success, users are created in the facileManager database using the selected template account for granular permissions within the environment. If no template is selected then user authentication will fail (this is another method of controlling access to facileManager). These users cannot be disabled nor can their passwords be changed within facileManager. The PHP LDAP extensions must be installed before this option is available.</p> <p>You can reset the authentication method by setting the following in config.inc.php:</p> <pre><code>define('FM_NO_AUTH', true);\n</code></pre>"},{"location":"admin/settings/#login-message","title":"Login Message","text":"<p>Define a message to be displayed at login (such as a terms and conditions) and optionally require users to acknowledge the message for authenication to succeed.</p>"},{"location":"admin/settings/#client-registration","title":"Client Registration","text":"<p>You can choose to allow clients to automatically register in the database or not during installation.</p>"},{"location":"admin/settings/#api-support","title":"API Support","text":"<p>By enabling API support, users are able to create keypairs to authenticate with through the client scripts. This opens up the ability to make a limited selection of module changes without using the web interface.</p>"},{"location":"admin/settings/#ssl","title":"SSL","text":"<p>You can choose to have facileManager enforce the use of SSL when a user tries to access the web app.</p>"},{"location":"admin/settings/#mailing","title":"Mailing","text":"<p>There are a few things facileManager and its modules may need to send an e-mail about (such as password reset links). These settings allow you to configure the mailing settings to use for your environment and enable/disable mailing altogether.</p>"},{"location":"admin/settings/#proxy-server","title":"Proxy Server","text":"<p>Set the appropriate configuration if facileManager is behind a proxy server for Internet access.</p>"},{"location":"admin/settings/#date-and-time","title":"Date and Time","text":"<p>Set your preferred timezone, date format, and time format for facileManager to use throughout all aspects of the app. What you select is how all dates and times will be display including any client configuration files.</p>"},{"location":"admin/settings/#logging-method","title":"Logging Method","text":"<p>There are three logging methods supported by facileManager:</p> <p><code>Built-in</code></p> <p>Events will only be logged in the facileManager database.</p> <p><code>syslog</code></p> <p>Events will only be logged to syslog.</p> <p><code>Built-in + syslog</code></p> <p>Events will be logged to facileManager and syslog.</p>"},{"location":"admin/settings/#show-errors","title":"Show Errors","text":"<p>Choose whether you want facileManager errors to be displayed as they occur or not. This can be useful if you are having trouble adding or editing objects.</p>"},{"location":"admin/settings/#temporary-directory","title":"Temporary Directory","text":"<p>Periodically facileManager and its modules may need to create temporary files or directories on your webserver. Specify the local path for it to use.</p>"},{"location":"admin/settings/#software-update","title":"Software Update","text":"<p>Choose whether or not facileManager will automatically check for software updates. If you opt in, then you choose the minimum release types to be notified about and the frequency of checks.</p>"},{"location":"admin/settings/#ssh-username","title":"SSH Username","text":"<p>When servers are configured to receive updates via SSH, this username will be created (if not already present) on your clients and will be used for the client interaction.</p>"},{"location":"admin/settings/#ssh-key-pair","title":"SSH Key Pair","text":"<p>In order for client configs to be updated via SSH, facileManager needs a 2048-bit passwordless key pair generated. Without this key pair, clients cannot use the SSH update method. Click the 'Generate' button to have facileManager automatically generate the necessary key pair.</p>"},{"location":"admin/settings/#image-branding","title":"Image Branding","text":"<p>Add your own image to brand facileManager. This image will be used on the login screen, navigation header, and automated e-mails. You need to manually add it to the document root on the web server and specify the relative URI path.</p>"},{"location":"admin/settings/#enable-maintenance-mode","title":"Enable Maintenance Mode","text":"<p>Only users with Super Admin or Module Management privileges are able to authenticate. This is useful during application upgrades.</p>"},{"location":"admin/settings/#fmdhcp","title":"fmDHCP","text":"<p>There are a few settings available at Settings \u2192 fmDHCP.</p> <p>The fmDHCP Manage Settings or Super Admin permission is required to change settings.</p>"},{"location":"admin/settings/#enable-dhcpd-checks","title":"Enable dhcpd Checks","text":"<p>Default: <code>disabled</code></p> <p>With dhcpd checks enabled, before any server configuration occurs, fmDHCP will parse through the configuration and run <code>dhcpd -t -cf</code> against it.  If the configuration has no errors then it will be deployed to the DHCP servers. Otherwise, error messages from the two utilities will be displayed and deployment will stop.</p> <p>This does require the utility to be installed on the web server and a sudoers entry added allowing the web server user to run it.</p> Debian-basedRedHat-based <pre><code>sudo apt install dhcpd\n</code></pre> <pre><code>sudo yum install dhcpd\n</code></pre> <p>Note</p> <p>The fmDHCP Settings page will show what the sudoers file entry should look like.</p>"},{"location":"admin/settings/#fmdns","title":"fmDNS","text":"<p>There are several settings available at Settings \u2192 fmDNS.</p> <p>_The fmDNS Manage Settings or Super Admin permission is required to change settings.</p>"},{"location":"admin/settings/#enable-named-checks","title":"Enable named Checks","text":"<p>Default: <code>disabled</code></p> <p>With named checks enabled, before any server configuration or zone reload occurs, fmDNS will parse through the configuration and run <code>named-checkconf</code> and/or <code>named-checkzone</code> against it.  If the configuration has no errors then it will be deployed to the DNS servers. Otherwise, error messages from the two utilities will be displayed and deployment will stop.</p> <p>This does require the two utilities to be installed on the web server and a sudoers entry added allowing the web server user to run them.</p> Debian-basedRedHat-based <pre><code>sudo apt install bind9\n</code></pre> <pre><code>sudo yum install bind9\n</code></pre> <p>Note</p> <p>The fmDNS Settings page will show what the sudoers file entry should look like.</p>"},{"location":"admin/settings/#purge-configuration-files","title":"Purge Configuration Files","text":"<p>Default: <code>disabled</code></p> <p>When enabled, configuration files will be deleted on the DNS servers before building the server config. This can be handy if you want to remove unused files.</p>"},{"location":"admin/settings/#use-defined-keys-with-rndc","title":"Use Defined Keys with rndc","text":"<p>Default: <code>disabled</code></p> <p>Use keys defined in named.conf.keys with rndc actions (each server can override this).</p>"},{"location":"admin/settings/#zone-filename-format","title":"Zone Filename Format","text":"<p>Default: <code>db.{ZONENAME}.hosts</code></p> <p>The filename structure for the zone files. <code>{ZONENAME}</code> will be replaced with the name of the zone.</p>"},{"location":"admin/settings/#create-reverse-zones-automatically","title":"Create Reverse Zones Automatically","text":"<p>Default: <code>disabled</code></p> <p>While creating A records and choosing to create the associated PTR record, reverse zones can be automatically created if they are missing.</p>"},{"location":"admin/settings/#use-dname-resource-records-for-clones","title":"Use DNAME Resource Records for Clones","text":"<p>Default: <code>enabled</code></p> <p>When creating cloned zones, use the DNAME resource record rather than a full clone (when available).</p>"},{"location":"admin/settings/#sort-zone-names-hierarchically","title":"Sort Zone Names Hierarchically","text":"<p>Default: <code>disabled</code></p> <p>Sort zone names with a hierarchy to group sub-zones together.</p> <p>For example: <pre><code>domain.com\nbar.domain.com\nfoo.bar.domain.com\n</code></pre></p>"},{"location":"admin/settings/#default-dnssec-signature-expiry","title":"Default DNSSEC Signature Expiry","text":"<p>Default: <code>30</code></p> <p>Define the number of days the DNSSEC signatures should be valid for (each zone can override this).</p>"},{"location":"admin/settings/#define-url-rr-web-servers","title":"Define URL RR Web Servers","text":"<p>Default: <code>none</code></p> <p>This feature will enable the fmDNS URL resource record which allows DNS records to redirect the user to a URL. For example:</p> <p><code>foo.bar.com  IN  URL  http://www.foobar.com/some/landing/page.html</code></p> <p>List the (public) IP addresses or hostnames the URL RRs should resolve to in order to handle the web redirects (semi-colon or comma delimited).</p>"},{"location":"admin/settings/#fmsqlpass","title":"fmSQLPass","text":"<p>There are a few settings available at Settings \u2192 fmSQLPass.</p> <p>The fmSQLPass Manage Settings or Super Admin permission is required to change settings.</p>"},{"location":"admin/settings/#minimum-password-strength","title":"Minimum Password Strength","text":"<p>Default: <code>Strong</code></p> <p>This setting restricts the new passwords to a minimum strength:</p> <p>Medium - The password must be at least seven (7) characters long containing letters and numbers.</p> <p>Strong - The password must be at least eight (8) characters long containing uppercase and lowercase letters, numbers, and special characters ('&amp;', '$', '@', etc.).</p>"},{"location":"admin/settings/#default-username","title":"Default Username","text":"<p>Default: <code>none</code></p> <p>Default database user to login as. This will be overridden if the user is defined at the server level.</p>"},{"location":"admin/settings/#default-password","title":"Default Password","text":"<p>Default: <code>none</code></p> <p>Default database user password to login with. This will be overridden if the password is defined at the server level.</p>"},{"location":"admin/settings/#fmwifi","title":"fmWifi","text":"<p>There are a few settings available at Settings \u2192 fmWifi.</p> <p>The fmWifi Manage Settings or Super Admin permission is required to change settings.</p>"},{"location":"admin/settings/#include-wlan-psk","title":"Include WLAN PSK","text":"<p>Default: <code>disabled</code></p> <p>Always include the WLAN PSK even when users are defined.</p>"},{"location":"admin/settings/#use-ebtables","title":"Use ebtables","text":"<p>Default: <code>enabled</code></p> <p>Block clients with <code>ebtables</code> in addition to deny list. The <code>ebtables</code> package is required on the access point (AP) and the AP must be configured as a bridge.</p> <p>This option is recommended for Raspbian systems.</p> <p>Note</p> <p>The ACL functionality of hostapd (<code>macaddr_acl</code>) does not seem to work with Raspbian. Therefore, the use of <code>ebtables</code> is recommended to deny clients.</p>"},{"location":"admin/settings/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"api/","title":"REST API","text":""},{"location":"api/#overview","title":"Overview","text":"<p>Use REST APIs to create, list, modify, and delete resources in facileManager modules from within programs and scripts.</p> <p>Current modules that support API actions:</p> <ul> <li>fmDNS</li> </ul> <p>You can automate some tasks that are usually performed manually using the UI.</p> <p>The REST APIs can be accessed via applications or scripts that support the following request methods:</p> Method Description <code>POST</code> Create new resources <code>PATCH</code> Update existing resources <code>DELETE</code> Delete existing resources <p>In addition, <code>client.php</code> can be used to access the API. This client can often be easier to setup and provides the common functions a user requires.</p>"},{"location":"api/#setup","title":"Setup","text":"<p>REST APIs are part of the facileManager installation and can be used once enabled in Settings \u2192 General.</p> <p></p> <p>Once the API is enabled, create the key pairs.</p>"},{"location":"api/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"api/auth/","title":"Authentication","text":""},{"location":"api/auth/#authentication","title":"Authentication","text":"<p>API authentication is done via API key pairs generated through the UI. These keys are tied to specific user accounts and retain the same access-level privileges as the username/password pair.</p> <p>Just like user accounts, the associated API keys can be enabled, disabled, and deleted.</p>"},{"location":"api/auth/#api-key-pairs","title":"API Key Pairs","text":"<p>When the API is enabled, the Users &amp; Groups page will have a section for API Keys.</p> <p> Each user properties window will also have a link to create an API key pair.</p> <p></p> <p>Once the logged in user clicks Add New, a key pair will be generated and presented to the user.</p> <p></p> <p>This key pair will be used to interact with the REST API.</p> <p>Note</p> <p>The currently logged in user cannot create API key pairs for any other user.</p>"},{"location":"api/auth/#usage","title":"Usage","text":"<p>The key pair can be used by <code>client.php</code> or any other typical means of interacting with a REST API.</p>"},{"location":"api/auth/#clientphp","title":"<code>client.php</code>","text":"<p>After client installation, add the following to /usr/local/facileManager/config.inc.php on your client(s) from where you want to use the API (substitute the actual values with your own).</p> <pre><code>define('APIKEY', 'UH27EOM9EUELLUKRX0KDZEAWGN');\ndefine('APISECRET', 'Lyznun1N4gQGILoHqweZLAhGyYrHCQQV7AuUN');\n</code></pre> <p>Alternatively, you may add the <code>APIKEY</code> and <code>APISECRET</code> variables to another file and reference it in your API calls with <code>client.php apicreds=/path/to/file ...</code>.</p>"},{"location":"api/auth/#other-client","title":"Other Client","text":"<p>Documentation Missing</p> <p>To be written.</p>"},{"location":"api/auth/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"api/client.php/","title":"client.php","text":""},{"location":"api/client.php/#general-usage","title":"General Usage","text":"<p>Instead of writing your own interface to the API, the associated module's <code>client.php</code> script can be used as an API client. You can use the client app on any existing client or you may install it on a system that will be used for API interaction without any other module functionality.</p> <p>If you choose to use the API from a system that is not a module client, you still need to install the client scripts, but may enable the API functionality within the module <code>client.php</code> script:</p> <p><code>sudo php /usr/local/facileManager/fmDNS/client.php install api</code></p>"},{"location":"api/client.php/#fmdns","title":"fmDNS","text":"<p>The supported API parameters can be viewed from the client help file: <pre><code>php /usr/local/facileManager/fmDNS/client.php help\n...\n     api                      Invokes an API call (cannot be used with no-ssl)\n     apitest                  Perform basic API functionality tests\n     apicreds=/path/to/file   Filename containing API key and secret (default: config.inc.php)\n\n    API parameters:\n     action=XX                Defines API action to take on a record (add, update, delete)\n     type=XX                  Defines the RR type (A, AAAA, CNAME, DNAME, MX, NS, PTR, TXT)\n     name=XX                  Defines the name of the RR\n     value=XX                 Defines the value of the RR\n     ttl=XX                   Defines the TTL of the RR\n     priority=XX              Defines the priority of the RR (MX only)\n     append=XX                Defines whether to append the zone name or not (yes, no)\n     comment=XX               Defines the record comment\n     status=XX                Defines the record status (active, disabled)\n     newname=XX               Defines the new record name (when action=update)\n     newvalue=XX              Defines the new record value (when action=update)\n     setPTR=XX                Defines whether to automatically create/update the PTR (yes, no)\n     soa-only=XX              Defines whether to only increment the SOA serial number (yes, no)\n     reload=XX                Defines whether to reload the zone or not (yes, no)\n</code></pre></p>"},{"location":"api/client.php/#add-record","title":"Add Record","text":"<pre><code>sudo php /usr/local/facileManager/fmDNS/client.php api action=add id=4 type=A name=test value=192.0.2.10\nResponse: (202) Success\n</code></pre> <p>As long as the reverse zone already exists or can be automatically created, new A records can be created with along with the corresponding PTR. <pre><code>sudo php /usr/local/facileManager/fmDNS/client.php api action=add id=4 type=A name=test value=192.0.2.10 setPTR=yes\nResponse: (201) Success\n</code></pre></p>"},{"location":"api/client.php/#update-record","title":"Update Record","text":"<pre><code>sudo php /usr/local/facileManager/fmDNS/client.php api action=update id=4 type=A name=test value=192.0.2.10 newvalue=192.0.2.11 reload=yes    \nResponse: (200) Success\n</code></pre>"},{"location":"api/client.php/#delete-record","title":"Delete Record","text":"<pre><code>sudo php /usr/local/facileManager/fmDNS/client.php api action=delete id=4 type=A name=test\nResponse: (204) Success\n</code></pre>"},{"location":"api/client.php/#update-soa-serial-number","title":"Update SOA Serial Number","text":"<pre><code>sudo php /usr/local/facileManager/fmDNS/client.php api id=4 soa-only=yes\nResponse: (200) Success\n</code></pre>"},{"location":"api/client.php/#reload-zone","title":"Reload Zone","text":"<pre><code>sudo php /usr/local/facileManager/fmDNS/client.php api id=4 reload=yes\nResponse: (200) Success\n</code></pre>"},{"location":"api/client.php/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"api/codes/","title":"Return Codes","text":""},{"location":"api/codes/#return-codes","title":"Return Codes","text":"<p>The following table lists all of the return codes that are returned from the REST APIs.</p> Return Code Code Number Description Success 200 The request was successful. Success 201 The request was fulfilled and the new resource was created. Success 204 The request was fulfilled and the resource was deleted. Bad Request 400 The request was not understood by the server due to incorrect syntax. Unauthorized 401 The request requires user authentication. Forbidden 403 The request requires additional user privileges. Not Found 404 The server did not find anything that matches the request. Not Allowed 405 The method is not allowed. Bad Request 1004 The request was unsuccessful because the record already exists. Bad Request 2000 Something was wrong with the request (rare). Dryrun 3000 The dryrun was successful."},{"location":"api/codes/#fmdns-specific","title":"fmDNS-specific","text":"<p>The following table lists additional return codes that are related to the fmDNS module only.</p> Return Code Code Number Description Success 202 The request was fulfilled and the new resource was created except for the PTR. Success 205 The request was fulfilled and the resource was deleted except for the PTR. Forbidden 1000 The user is not privileged to manage records. Forbidden 1001 The user is not privileged to access this zone. Forbidden 1002 The user is not privileged to manage records this type of record. Forbidden 1003 The user is not privileged to reload zones."},{"location":"api/codes/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"getting-started/basic-install/","title":"Installation","text":""},{"location":"getting-started/basic-install/#server-installation","title":"Server Installation","text":"<ol> <li>Move the contents of the server directory to your document root.    (ie /var/www/html/facileManager/)</li> <li>Point your web browser to http://example.com/facileManager/ or your    virtualhost if you set one up (ie http://facileManager.example.com).</li> <li>Follow the installation wizard to setup your database and admin user.</li> </ol>"},{"location":"getting-started/basic-install/#additional-steps-os-based","title":"Additional Steps (OS-based)","text":"<p>The following steps need to be performed on vanilla installations of certain  operating systems to allow .htaccess files to be used.</p> Debian-basedRHEL7/CentOS7 <p>Edit /etc/apache2/sites-enabled/default and change <code>AllowOverride None</code> to <code>AllowOverride All</code> under <code>&lt;directory /var/www/&gt;</code> and reload apache.</p> <p>Edit /etc/httpd/conf/httpd.conf and change <code>AllowOverride None</code> to <code>AllowOverride All</code> under <code>&lt;Directory /var/www/html&gt;</code> and reload apache.</p>"},{"location":"getting-started/basic-install/#client-installation","title":"Client Installation","text":"<p>Install PHP and the required modules.</p> Debian-basedRedHat-based <pre><code>sudo apt install php-cli php-curl\n</code></pre> <pre><code>sudo yum install php-cli php-curl\n</code></pre> <p>Install optional modules.</p> Debian-basedRedHat-based <pre><code>sudo apt install php-openssl php-zlib\n</code></pre> <pre><code>sudo yum install php-openssl php-zlib\n</code></pre> <p>Move the contents of the client directory to /usr/local/ on your client    servers to manage. (Note: client files from the core (or complete) package    are also required.) <pre><code>sudo mv facileManager/client/facileManager /usr/local/\n</code></pre></p> <p>For each module you wish to use, run the following on each client to complete    the installation. <pre><code>sudo php /usr/local/facileManager/&lt;module_name&gt;/client.php install\n</code></pre></p>"},{"location":"getting-started/basic-install/#prompts","title":"Prompts","text":"<p>The installation process invoked will prompt for three main items:</p> <ul> <li>facileManager server URL</li> <li>Client serial number</li> <li>Client update method</li> </ul>"},{"location":"getting-started/basic-install/#client-serial-number","title":"Client serial number","text":"<p>This number is a unique identifier for each client. In most cases you can accept the default to automatically generate a unique client serial number.</p>"},{"location":"getting-started/basic-install/#client-update-method","title":"Client update method","text":"<p>How the fM server can communicate with the client to initiate configuration updates can be done via cron, ssh, or http(s).</p> <p><code>cron</code></p> <p>Specify this option to have the client check periodically (default every 5 minutes) for any configuration updates.</p> <p><code>ssh</code></p> <p>Specify this option to allow the fM server to SSH to the client and invoke <code>client.php</code> to apply pending changes. This option will allow for immediate changes from fM.</p> <p>When this update method is selected, the configured SSH user and public key (from Settings \u2192 General) will be installed on the client.</p> <p><code>http(s)</code></p> <p>Specify this option to allow the fM server to invoke an HTTP POST to the client and invoke <code>client.php</code> to apply pending changes. This option will allow for immediate changes from fM.</p>"},{"location":"getting-started/basic-install/#installer-options","title":"Installer options","text":"<p>The installer does have options that can be passed in the <code>-o|options</code> parameter with the client which will skip the prompts.  This can be handy for unattended installations.</p> <p>From the client.php help file</p> <p>(invoked with <code>php /usr/local/facileManager/&lt;module_name&gt;/client.php help</code>):</p> <pre><code>-o|options    Installation options comma-delimited to avoid prompts\n                  Valid options: \n                        FMHOST    fM host url\n                        SERIALNO  Server serial number (or 0 to auto-generate)\n                        method    Update method to use (cron, ssh, http)\n                  Examples:\n                        install -o FMHOST=https://example.com/fm/,method=cron\n                        install options FMHOST=fm.example.com,SERIALNO=0,method=ssh\n</code></pre>"},{"location":"getting-started/basic-install/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"getting-started/post-install/","title":"Post-Install","text":"<p>Now that facileManager is installed, it's time to install and activate the modules.</p> <p>Review the Settings \u2192 General and make any necessary changes for your environment.</p>"},{"location":"getting-started/post-install/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"getting-started/prerequisites/","title":"Prerequisites","text":"<p>facileManager (fM) and its modules have two parts -- the server and the client(s). The server is where the web interface runs from and holds all of the information. The client (or agent) is installed on the systems to interact with the server.</p> <p>Note</p> <p>It is not required to host the MySQL database on the same server as the web interface.</p>"},{"location":"getting-started/prerequisites/#facilemanager-server","title":"facileManager server","text":""},{"location":"getting-started/prerequisites/#web-server","title":"Web server","text":"<p>Since the facileManager server interface is web-based, you'll need a working web server of your choice (i.e. Apache, nginx, lighttpd, etc.) with mod_rewrite.so (or equivalent) enabled.</p>"},{"location":"getting-started/prerequisites/#php","title":"PHP","text":"<ul> <li>PHP 7.3.0+ with MySQL support</li> </ul>"},{"location":"getting-started/prerequisites/#database","title":"Database","text":"<p>facileManager stores all of the information in a database and only supports MySQL-compatible databases.</p> <ul> <li>MySQL 5.0 or newer</li> <li>MariaDB 5.0 or newer</li> </ul> <p>Required MySQL user privileges on the database include</p> <pre><code>SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER, DROP, LOCK TABLES\n</code></pre> <p>Example</p> <pre><code>CREATE DATABASE `facileManager`;\nCREATE USER 'fm'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL ON `facileManager`.* TO 'fm'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre>"},{"location":"getting-started/prerequisites/#web-browser","title":"Web browser","text":"<p>To use facileManager you need a web browser with cookies and JavaScript enabled.</p> <p>Minimum browser versions</p> <p>Note</p> <p>Internet Explorer is not supported - it's too tiresome.</p>"},{"location":"getting-started/prerequisites/#facilemanager-client-all-modules","title":"facileManager client (all modules)","text":"<p>The facileManager client app is PHP-based (PHP 5.0 or newer).</p> <p>Network connectivity needs to be allowed between the server and clients.</p> Source Destination Service Note Client fM Server http/https The client gets its configuration via HTTP GET &amp; POST requests to the fM server fM Server Client ICMP Echo Request (Ping) fM uses ICMP to ensure the clients are reachable. fM Server Client ssh This is only required if ssh is selected for the update method. fM Server Client http/https This is only required if http/https is selected for the update method. <p>If you choose to have your client get updates from the server via http(s), you need:</p> <ul> <li>A running web server if using http(s) update methods<ul> <li>The install script supports the following web servers:<ul> <li>httpd</li> <li>lighttpd</li> <li>nginx</li> </ul> </li> </ul> </li> </ul>"},{"location":"getting-started/prerequisites/#additional-module-specific-prerequisites","title":"Additional Module-Specific Prerequisites","text":"<p>In addition to the fM client prerequisites, some modules have their own unique requirements.</p>"},{"location":"getting-started/prerequisites/#fmdhcp","title":"fmDHCP","text":"<ul> <li>ISC DHCP</li> </ul> <p>Note</p> <p>ISC KEA is not yet supported.</p>"},{"location":"getting-started/prerequisites/#fmdns","title":"fmDNS","text":"<ul> <li>ISC BIND 9.3 or later</li> </ul>"},{"location":"getting-started/prerequisites/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"getting-started/update/","title":"Updating","text":""},{"location":"getting-started/update/#server-upgrade","title":"Server Upgrade","text":"<p>Ensure software update checks are enabled in Settings \u2192 General</p> <p></p> <p>When there is an upgrade availabe, navigate to Modules and click Update Core.</p> <p></p> <p>This process will automatically download the latest facilemanager-core package and extract it in the document root. The next step is to update the database which forces all authenticated users to logout and only super-admin users can upgrade the database.</p> <p>Note</p> <p>Ensure your document root for facileManager is writable by the web server user.</p> <p>Example</p> <pre><code>sudo chown -R www:www /var/www/html/facileManager\n</code></pre>"},{"location":"getting-started/update/#alternative-method","title":"Alternative Method","text":"<ol> <li>Make a backup of your database manually or by using the built-in tool via the UI (Admin \u2192 Tools).</li> <li>Make a backup of your config.inc.php file.</li> <li>Delete your old facileManager files.</li> <li>Extract/upload the new files from the server directory.</li> <li>Copy your backup of config.inc.php to the document root.    (i.e. /var/www/html/facileManager/)</li> <li>Login as a super-admin to facileManager and follow the wizard to upgrade     your database.</li> <li>Once fM is upgraded, you will be redirected to the admin-modules page where    you can upgrade your modules individually.</li> </ol>"},{"location":"getting-started/update/#client-upgrade","title":"Client Upgrade","text":"<p>You can update the clients through the UI (Config \u2192 Servers) </p> <p></p> <p>...or by running the following on the clients:</p> <p><code>sudo php /usr/local/facileManager/&lt;module_name&gt;/client.php upgrade</code></p>"},{"location":"getting-started/update/#alternative-method_1","title":"Alternative Method","text":"<ol> <li>Make a backup of your config.inc.php file. <p><code>cp /usr/local/facileManager/config.inc.php .</code></p> </li> <li>Move the contents of the client directory to /usr/local/ on your client    servers to manage. <p><code>sudo mv facileManager/client/facileManager /usr/local/</code></p> </li> <li>Restore your backup of config.inc.php to /usr/local/facileManager. <p><code>sudo mv config.inc.php /usr/local/facileManager</code></p> </li> </ol>"},{"location":"getting-started/update/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmDHCP/","title":"Getting Started","text":"<p>Documentation Missing</p> <p>To be written.</p>"},{"location":"modules/fmDHCP/src/client.php/","title":"Client.php","text":""},{"location":"modules/fmDHCP/src/client.php/#fmdhcp-parameters","title":"fmDHCP Parameters","text":"<p>fmDHCP has additional parameters that can be passed to <code>client.php</code> that are specific to this module.</p>"},{"location":"modules/fmDHCP/src/client.php/#-l-dumpdelete","title":"-l (dump|delete)","text":"<p>Leases can be managed by invoking <code>-l</code> followed by an option to <code>dump</code> or <code>delete</code> them.</p> <p>Example</p> <pre><code>sudo php client.php -l dump\nsudo php client.php -l delete=10.1.1.100\n</code></pre>"},{"location":"modules/fmDHCP/src/client.php/#-o-humanweb","title":"-o <code>&lt;(human|web)&gt;</code>","text":"<p>When dumping the leases, you can specify the output style -- either <code>human</code>-readable or used for <code>web</code>.</p> <p>Example</p> <pre><code>sudo php client.php -l dump -o web\n</code></pre>"},{"location":"modules/fmDHCP/src/settings/","title":"Settings","text":""},{"location":"modules/fmDHCP/src/settings/#fmdhcp","title":"fmDHCP","text":"<p>There are a few settings available at Settings \u2192 fmDHCP.</p> <p>The fmDHCP Manage Settings or Super Admin permission is required to change settings.</p>"},{"location":"modules/fmDHCP/src/settings/#enable-dhcpd-checks","title":"Enable dhcpd Checks","text":"<p>Default: <code>disabled</code></p> <p>With dhcpd checks enabled, before any server configuration occurs, fmDHCP will parse through the configuration and run <code>dhcpd -t -cf</code> against it.  If the configuration has no errors then it will be deployed to the DHCP servers. Otherwise, error messages from the two utilities will be displayed and deployment will stop.</p> <p>This does require the utility to be installed on the web server and a sudoers entry added allowing the web server user to run it.</p> Debian-basedRedHat-based <pre><code>sudo apt install dhcpd\n</code></pre> <pre><code>sudo yum install dhcpd\n</code></pre> <p>Note</p> <p>The fmDHCP Settings page will show what the sudoers file entry should look like.</p>"},{"location":"modules/fmDNS/advanced/templates/","title":"Templates","text":"<p>Templates can be used to limit duplicate work.</p>"},{"location":"modules/fmDNS/advanced/templates/#soa","title":"SOA","text":"<p>Instead of create the same SOA for multiple zones, you can create a SOA template which can then be applied to an unlimited number of zones. Go to Templates \u2192 SOA to create new and view existing templates. SOA templates can only be deleted when there are no zones associated with them.</p> <p>The Zone Management or Super Admin permission is required to add, edit, and delete SOA templates.</p>"},{"location":"modules/fmDNS/advanced/templates/#create","title":"Create","text":"<p>New SOA templates can be created in two methods.</p>"},{"location":"modules/fmDNS/advanced/templates/#method-1","title":"Method 1","text":"<p>Navigate to Templates \u2192 SOA and click on Add and fill out the form.</p> <p></p>"},{"location":"modules/fmDNS/advanced/templates/#method-2","title":"Method 2","text":"<p>When editing the Resource Records (RR) for any zone, go to the SOA RR, fill out the form and tick the box to Create Template.</p> <p></p> <p>This will create the template and automatically assign it to the zone you are currently editing records for.</p>"},{"location":"modules/fmDNS/advanced/templates/#default-template","title":"Default Template","text":"<p>When a SOA template is set to be the Default Template, it will automatically be selected as the SOA when creating new zones.</p> <p></p> <p>The SOA template with a star signifies it's the default template.</p> <p></p>"},{"location":"modules/fmDNS/advanced/templates/#zone","title":"Zone","text":"<p>Zones can be saved as a template and applied to an unlimited number of zones. This can speed up your zone additions and management if you have several zones with a similar framework (same DNS servers hosting it, NS records, SOA, other RR, etc.).</p> <p>Zone templates can only be deleted when there are no zones associated with them. In addition, clones of a zone based on a template cannot be shortened to a DNAME RR.</p>"},{"location":"modules/fmDNS/advanced/templates/#create_1","title":"Create","text":"<p>New zone templates can be created in two methods.</p>"},{"location":"modules/fmDNS/advanced/templates/#method-1_1","title":"Method 1","text":"<p>Navigate to Templates \u2192 Zones and click on Add and fill out the form.</p> <p></p>"},{"location":"modules/fmDNS/advanced/templates/#method-2_1","title":"Method 2","text":"<p>Navigate to Zones and click on Add and fill out the form and tick the box to Create Template.</p>"},{"location":"modules/fmDNS/advanced/templates/#default-template_1","title":"Default Template","text":"<p>When a zone template is set to be the Default Template, it will automatically be selected as the template when creating new zones.</p> <p></p> <p>The zone template with a star signifies it's the default template.</p> <p></p>"},{"location":"modules/fmDNS/advanced/templates/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmDNS/advanced/url/","title":"URL RR","text":"<p>The custom URL resource record allows domains or records to redirect users to a web page. This is enabled by defining one or more web servers that will handle the web redirects at Admin \u2192 Settings. The supporting web servers will also need the client installed to enable URL redirects. Once defined, the URL RR will be available when managing zone records.</p>"},{"location":"modules/fmDNS/advanced/url/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmDNS/advanced/variables/","title":"Variables","text":"<p>There are built-in variables that can be used in any record value that will get translated to the appropriate value. Such variables include:</p> Variable Description <code>{domain}</code> This will be substituted for the current domain name. <code>{domain:&lt;id&gt;}</code> This will be substituted for the name of domain id <code>&lt;id&gt;</code>. Example: <code>{domain:42}</code>"},{"location":"modules/fmDNS/advanced/variables/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmDNS/examples/split-view/","title":"Split-View","text":""},{"location":"modules/fmDNS/examples/split-view/#split-view-dns","title":"Split-View DNS","text":"<p>It's common to have multiple views serving zones and sometimes multiple views need to contain zones with the same name, but with different data. This is commonly referred to as \"split view dns\" or \"split brain dns.\"</p> <p>A sample configuration might look like this:</p> <pre><code>view internal {\n    match-clients { 10/8; };\n\n    zone test-domain.com {\n        type primary;\n        file \"test-domain.com.internal.db\";\n    };\n};\n\nview external {\n    match-clients { any; };\n\n    zone test-domain.com {\n        type primary;\n        file \"test-domain.com.external.db\";\n    };\n};\n</code></pre> <p>We will use this sample configuration and build it with fmDNS. It can be achieved by a couple of different methods, but in either case, the views need to be created first. Go to Config \u2192 Views and add the two views (internal and external).</p> <p></p> <p>For each of the new views, we need to define the <code>match-clients</code> option. Click on the sliders icon next to the view name and add the option.</p> <p></p> <p></p> <p>The two views are setup and it's now time to create the zones.</p>"},{"location":"modules/fmDNS/examples/split-view/#method-1-with-clones","title":"Method 1: With Clones","text":"<p>Zone clones would be appropriate if a few records need to be different, but the majority should be the same for each view. Go to Zones \u2192 Forward and create the external zone and associate it with the external view.</p> <p></p> <p>Now clone the new zone to create the internal zone with the same name and associate it with the internal view.</p> <p></p> <p>There are now two zones with the same name in different views and one is a clone of the other.</p> <p></p> <p>Unless you associated a SOA template with the new zones, a SOA record needs to be created. Click on the zone name in the external view which should be the parent zone. Create the SOA, NS, and any A records.</p> <p></p> <p>Click on the cloned zone in the internal view and you will see the records exist from the parent zone. To make the internal zone unique, create a private record.</p> <p></p> <p>When you preview the parent zone you will see both zones show in the preview -- one for each view.</p> <pre><code>===========================================================================\n/master/db.test-domain.com.14.hosts:\n===========================================================================\n 1 ; This file was built using fmDNS 7.1.1 on Wed, 30 Apr 2025 20:26:45 +0000 UTC\n 2 \n 3 $TTL 1d\n 4 test-domain.com. IN SOA ns1.test-domain.com. root.test-domain.com. (\n 5      2025043000  ; Serial\n 6      2h      ; Refresh\n 7      1h      ; Retry\n 8      2w      ; Expire\n 9      1d )        ; Negative caching of TTL\n10 \n11 ; Name servers\n12 test-domain.com.               IN   NS   ns1.test-domain.com.\n13 \n14 ; Host addresses\n15 ns1                            IN   A   192.0.2.5\n16 www                            IN   A   192.0.2.10\n17 \n18 \n\n===========================================================================\n/master/db.test-domain.com.15.hosts:\n===========================================================================\n 1 ; This file was built using fmDNS 7.1.1 on Wed, 30 Apr 2025 20:26:45 +0000 UTC\n 2 \n 3 $TTL 1d\n 4 test-domain.com. IN SOA ns1.test-domain.com. root.test-domain.com. (\n 5      2025043000  ; Serial\n 6      2h      ; Refresh\n 7      1h      ; Retry\n 8      2w      ; Expire\n 9      1d )        ; Negative caching of TTL\n10 \n11 ; Name servers\n12 test-domain.com.               IN   NS   ns1.test-domain.com.\n13 \n14 ; Host addresses\n15 ns1                            IN   A   192.0.2.5\n16 private                        IN   A   192.0.2.20\n17 www                            IN   A   192.0.2.10\n18 \n19 \n</code></pre>"},{"location":"modules/fmDNS/examples/split-view/#method-2-without-clones","title":"Method 2: Without Clones","text":"<p>If the entire zone data is different between the two views then you might choose to create two separate zones with the same name, but associated with different views. Go to Zones \u2192 Forward and create the external zone and associate it with the external view.</p> <p></p> <p>Next, create the internal zone with the same name and associate it with the internal view.</p> <p></p> <p>There are now two zones with the same name in different views and they are independent of one another.</p> <p></p> <p>Create the SOA, NS, and any other resource records for each zone.</p>"},{"location":"modules/fmDNS/examples/split-view/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmDNS/getting-started/records/","title":"Resource Records","text":"<p>Resource Records are managed by clicking on the zone name from the zone listing. By default, <code>ALL</code> resource records (RR) will be displayed, but you can choose which RR to view by selecting one from the upper right. Any RR that has at least one entry will be listed outside of the drop-down menu.</p> <p>Note</p> <p>You can add IPv4 A type and IPv6 AAAA type records under the same page. Select A or AAAA from the upper-right and add your IPv4 and IPv6 records and fmDNS will auto-detect their type.</p> <p>The Record Management or Super Admin permission is required to add, edit, and delete records.</p>"},{"location":"modules/fmDNS/getting-started/records/#form-validation","title":"Form Validation","text":"<p>Whenever you add or edit records, the record(s) will need to be validated before they can be saved. Form validation attempts to ensure the data entered is RFC-compliant and flags any field that has bad data. You can either validate each entry individually by clicking the green checkmark at the end of the record row or use the Validate All button to check all new and modified entries.</p> <p></p>"},{"location":"modules/fmDNS/getting-started/records/#linked-ptr-records","title":"Linked PTR Records","text":"<p><code>A</code> records provide the option to automatically create a <code>PTR</code> record with the Create PTR checkbox. However, the reverse zone must first exist in order for <code>PTR</code> records to automatically be created. You can enable the automatic reverse zone creation in the Settings. In this case, the reverse zone will inherit the same SOA as the forward zone. Once an <code>A</code> record is created with a <code>PTR</code>, the record will show it has a linked <code>PTR</code> which can later be updated if the record changes.</p> <p></p> <p>Note</p> <p>If the corresponding reverse zone does not already exist, it can be automatically created during the record validation process.</p>"},{"location":"modules/fmDNS/getting-started/records/#append-domain","title":"Append Domain","text":"<p>When adding certain records (such as <code>CNAME</code>, <code>MX</code>, <code>SRV</code>, <code>SOA</code>, <code>NS</code>, etc.), you have the option append the domain to the record. This means fmDNS will automatically add the domain to the record so you don't have to give the fully qualified domain name in the record value. fmDNS will attempt to auto-detect whether or not the domain should be appended if no choice is made at the time of record creation.</p> <p></p> <p>This is helpful if you can't remember if a value needs a trailing period (.) or not.</p> <p></p> <pre><code>; Aliases\nno-append                         IN   CNAME   facilemanager.com.\ntest-append.test-domain.com.      IN   CNAME   web.test-domain.com.\n</code></pre>"},{"location":"modules/fmDNS/getting-started/records/#custom-record","title":"<code>CUSTOM</code> Record","text":"<p>Each zone has a <code>CUSTOM</code> RR which allows you to add any other zone data that might not otherwise be supported by fmDNS. Simply click on the <code>CUSTOM</code> RR in the upper right, add your content, and Save.</p> <p></p>"},{"location":"modules/fmDNS/getting-started/records/#unsaved-records","title":"Unsaved Records","text":"<p>Whenever a zone has unsaved resource records, there will be a yellow dot next to the domain name in the header as a visual indicator.</p> <p></p>"},{"location":"modules/fmDNS/getting-started/records/#cloned-zone-records","title":"Cloned Zone Records","text":"<p>When viewing the records of a cloned zone, the parent records will not be editable, but you can choose to skip them or add new records that impacts the cloned zone only.</p> <p></p>"},{"location":"modules/fmDNS/getting-started/records/#import","title":"Import","text":"<p>BIND-compatible zone files can be imported instead of adding records individually. Go to Admin \u2192 Tools and use the Import Zone Files utility. After selecting the file and zone to import to, you have one final chance to review what gets imported before the records are actually imported.</p> <p>Example</p> <p>You can generate a zone file to import using <code>rndc</code>: <pre><code>rndc dumpdb -zones /path/to/dump/directory/named_dump.db\n</code></pre></p>"},{"location":"modules/fmDNS/getting-started/records/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmDNS/getting-started/server-groups/","title":"Server Groups","text":"<p>If you have more than one server configured, then you can take advantage of the Server Groups which allows you to define a relationship with primary and secondary servers.</p> <p></p> <p>When defining (or modifying) a zone, you can choose which DNS servers will host the zone.  This can be specific servers, server groups, or All Servers.</p> <p></p> <p>When specifying a server group that has primary and secondary servers defined, fmDNS will build the zone differently on each type of server -- as a primary zone on the primaries and a secondary zone on the secondaries while automatically listing the IPs of the <code>primaries</code> on the secondaries.  When defining the server group and the Automatically set also-notify is set, then fmDNS will also automatically define <code>also-notify</code> on the primaries with the IPs of the secondaries in the group.</p> <p>dns1 <pre><code>===========================================================================\n/etc/named/zones/zones.conf.all:\n===========================================================================\n// This file was built using fmDNS 7.1.1 on Thu, 24 Apr 2025 16:01:11 +0000 UTC\n\nzone \"test-domain.com\" {\n    type primary;\n    file \"/etc/named/zones/primary/db.test-domain.com.hosts\";\n    also-notify { 192.168.1.101; };\n};\n</code></pre></p> <p>dns2 <pre><code>===========================================================================\n/etc/named/zones/zones.conf.all:\n===========================================================================\n// This file was built using fmDNS 7.1.1 on Thu, 24 Apr 2025 16:02:29 +0000 UTC\n\nzone \"test-domain.com\" {\n    type slave;\n    file \"/etc/named/zones/slave/db.test-domain.com.0.hosts\";\n    masters { 192.168.1.100; };\n};\n</code></pre></p> <p>Note</p> <p>You can also just define groups consisting of only primary servers to keep zones configured only on certain primary servers.</p>"},{"location":"modules/fmDNS/getting-started/server-groups/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmDNS/getting-started/zones/","title":"Zones","text":""},{"location":"modules/fmDNS/getting-started/zones/#create","title":"Create","text":"<p>Zones (aka domains) can be managed from the Zones menu item. From there you can add, edit, delete, and reload zones depending on your user permissions. Creating forward and reverse zones have many options to consider.</p> <p>Domain Name</p> <p>Required</p> <p>A valid RFC-compliant zone name. It does not need to be compliant if it's going to be a template. Reverse zones can be entered by either their subnet value (192.168.1) or by their arpa value (1.168.192.in-addr.arpa). You can also delegate reverse zones by specifying the classless IP range in the zone name (1-128.168.192.in-addr.arpa).</p> <p>Template</p> <p>Optional</p> <p>The template the zone will be based on. See Templates.</p> <p>Views</p> <p>Default: <code>All Views</code></p> <p>The view(s) the zone should be a loaded for.</p> <p>Zone Map</p> <p>Required</p> <p>Forward or Reverse and this is typically automatically selected based on the page view.</p> <p>Zone Type</p> <p>Default: <code>Primary</code></p> <p>The type of zone (<code>primary</code>, <code>secondary</code>, <code>stub</code>, <code>forward</code>, <code>url-redirect</code>).</p> <p>Note</p> <p><code>url-redirect</code> zone types is only a nomenclature in fmDNS. When the zone is defined with this type, a special <code>URL</code> resource record is created that fmDNS will automatically build a web redirect to this URL. To use this zone type, URL RR Web Servers must be defined in the Settings.</p> <p>Clone Of</p> <p>Optional</p> <p>Create the new zone as a clone of another existing zone. See Clones.</p> <p>DNS Servers</p> <p>Default: <code>All Servers</code></p> <p>Choose which DNS servers and/or groups to build the zone on.</p> <p>Domain TTL</p> <p>Optional</p> <p>Set the TTL on the zone if it should differ from the SOA. This is particularly used when the zone utilizes a SOA template.</p> <p>Zone Transfer Key</p> <p>Optional</p> <p>Choose a TSIG key for transfering this zone if it should differ from the View.</p> <p>SOA</p> <p>Default: <code>Custom</code> or the default SOA template</p> <p>Choose which SOA template to associate with the zone or select 'Custom' to manually enter a new SOA.</p> <p>Comment</p> <p>Optional</p> <p>Make notes about the zone.</p> <p>Support Dynamic Updates</p> <p>Optional</p> <p>This option allows zone record changes to be made on the DNS server itself (such as through nsupdate). When enabled, fmDNS will compare the zone file from the DNS server with that in the database and make any necessary changes. This option will increase processing time while reloading zones.</p> <p>Enable DNSSEC</p> <p>Optional</p> <p>This option enables zones to support DNSSEC signing. You must create the KSK and ZSK before zones will be signed (offline and inline signing are supported). During a configuration build or zone reload, the ZSK and KSK files will stored on the name servers in the directory defined by the most specific key-directory option defined (global, view, zone, server-override, etc.). This option will increase processing time while reloading zones.</p> <p>Create Template</p> <p>Optional</p> <p>Create a zone template from this zone. See Templates.</p> <p>The Zone Management or Super Admin permission is required to add, edit, and delete zones and templates.</p>"},{"location":"modules/fmDNS/getting-started/zones/#options","title":"Options","text":"<p>You can access the individual zone options by clicking on the \"Configure Additional Options\" link in the zone edit form or by clicking on the zone options icon next to the zone name:</p> <p></p> <p>From there you can configure options supported by the <code>zone</code> block.</p>"},{"location":"modules/fmDNS/getting-started/zones/#groups","title":"Groups","text":"<p>Zone groups allow you to group specific zones together for the purpose of restricting user access to specific zones. Instead of listing individual zones a user is restricted access to, you can specify a zone group for easier management.</p> <p></p> <p>In addition, zone groups can be used to filter the zones listing.</p> <p></p>"},{"location":"modules/fmDNS/getting-started/zones/#templates","title":"Templates","text":"<p>Zones can be saved as a template and applied to an unlimited number of zones. See Templates for more information.</p>"},{"location":"modules/fmDNS/getting-started/zones/#clones","title":"Clones","text":"<p>You can define a zone as a clone of another previously defined primary zone. The cloned zone will contain all of the same records present in the parent zone. This is useful if you have multiple zones with identical records as you won't have to repeat the record definitions. Clones can also be handy if you want some records to resolve differently in a split-view scenario.</p> <p>Simply click on the Clone this zone icon and create the zone as normal.</p> <p></p> <p>When you edit the records for a cloned zone, you have the Skip Import option on each record that comes from the parent.  When skipped, the particular record will not be loaded in the cloned zone on the DNS servers. You can also define new records inside cloned zones for those that are slightly different than the parent.</p> <p></p> <pre><code>===========================================================================\n/master/db.test-domain.com.hosts:\n===========================================================================\n 1 ; This file was built using fmDNS 7.1.1 on Tue, 29 Apr 2025 19:29:14 +0000 UTC\n 2 \n 3 $TTL 1d\n 4 test-domain.com. IN SOA ns1.test-domain.com. root.test-domain.com. (\n 5      2025042401  ; Serial\n 6      2h      ; Refresh\n 7      1h      ; Retry\n 8      2w      ; Expire\n 9      1d )        ; Negative caching of TTL\n10 \n11 ; Name servers\n12 test-domain.com.               IN   NS   ns1.test-domain.com.\n13 \n14 ; Host addresses\n15 ns1                            IN   A   192.168.1.5\n16 web.test-domain.com.           IN   A   10.10.10.100\n17 web.test-domain.com.           IN   A   10.10.10.101 ; second server\n18 \n19 \n\n===========================================================================\n/master/db.test-clone.net.hosts:\n===========================================================================\n 1 ; This file was built using fmDNS 7.1.1 on Tue, 29 Apr 2025 19:29:14 +0000 UTC\n 2 \n 3 $TTL 1d\n 4 test-clone.net. IN SOA ns1.test-clone.net. root.test-clone.net. (\n 5      2025042900  ; Serial\n 6      2h      ; Refresh\n 7      1h      ; Retry\n 8      2w      ; Expire\n 9      1d )        ; Negative caching of TTL\n10 \n11 ; Name servers\n12 test-clone.net.                IN   NS   ns1.test-clone.net.\n13 \n14 ; Host addresses\n15 ns1                            IN   A   192.168.1.5\n16 web.test-clone.net.            IN   A   10.10.10.101 ; second server\n17 web                            IN   A   10.10.10.102 ; third server on clone\n18 \n19\n</code></pre> <p>Instead of showing the total number of records in the cloned zone, the zones page will show the total additions and subtractions relative to the parent zone.</p> <p></p> <p>Note</p> <p>Cloned zones will use the SOA from its parent zone except it will have its own <code>Serial</code>.</p>"},{"location":"modules/fmDNS/getting-started/zones/#reload","title":"Reload","text":"<p>After a zone has been successfully built on the associated DNS servers, they can be reloaded going forward. When one or more resource records have been added or modified, that zone gets flagged for reload. There are four ways to reload a zone:</p> <p>Reload link</p> <p>Click on the reload link at the top of the zone's records page.</p> <p></p> <p>Reload icon</p> <p>Click on the reload icon in the zone actions column.</p> <p></p> <p>Bulk action</p> <p>Tick the box for each zone you want to reload and select Reload from the Bulk Actions menu and then click Apply.</p> <p></p> <p>Process all updates</p> <p>Click the Process all updates icon in the upper right.</p> <p></p> <p>Warning</p> <p>This will process all available updates for all servers and zones.</p> <p>The Reload Zone or Super Admin permission is required for reloading zones.</p>"},{"location":"modules/fmDNS/getting-started/zones/#import","title":"Import","text":"<p>You can import BIND-compatible zone dump files instead of adding zones and records individually. Go to Admin \u2192 Tools and use the Import Zone Files utility. Select your dump file and click 'Import Zones' which will import any views, zones, and records listed in the file.</p>"},{"location":"modules/fmDNS/getting-started/zones/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmDNS/src/client.php/","title":"Client.php","text":""},{"location":"modules/fmDNS/src/client.php/#fmdns-parameters","title":"fmDNS Parameters","text":"<p>fmDNS has additional parameters that can be passed to <code>client.php</code> that are specific to this module.</p>"},{"location":"modules/fmDNS/src/client.php/#dump-cache","title":"dump-cache","text":"<p>This parameter will dump the DNS cache via <code>rndc dumpdb -cache</code> and display the contents of the <code>dump-file</code> file (if it's configured in the <code>named.conf.*</code>files).</p> <p>Example</p> <pre><code>sudo php client.php dump-cache\n</code></pre>"},{"location":"modules/fmDNS/src/client.php/#clear-cache","title":"clear-cache","text":"<p>This parameter clears the DNS cache via <code>rndc flush</code>.</p> <p>Example</p> <pre><code>sudo php client.php clear-cache\n</code></pre>"},{"location":"modules/fmDNS/src/client.php/#-d-d-f-pathtozonesconf","title":"-D  | -D -f /path/to/zones.conf <p>This parameter dumps zone data to <code>STDOUT</code> and in required by <code>dump-zone</code>. It will dump data for a single zone by passing <code>-D &lt;zone_name&gt;</code> or it will dump data for multiple zones by passing <code>-f /path/to/zones.conf</code>.</p>  <p>Example</p> <pre><code>sudo php client.php dump-zone -D test-domain.com\nsudo php client.php dump-zone -f /etc/bind/zones/master/zones.conf\n</code></pre>","text":""},{"location":"modules/fmDNS/src/client.php/#-z-zones","title":"-z | zones <p>Instead of building all configuration files for bind (i.e. using <code>buildconf</code>), only the zone data will be built and reloaded using this parameter.</p>  <p>Example</p> <pre><code>sudo php client.php zones\n</code></pre>","text":""},{"location":"modules/fmDNS/src/client.php/#idid","title":"id=<code>&lt;ID&gt;</code> <p>Building and reloading the zone data for a single zone can be achieved by passing the zone ID with <code>zones</code>.</p>  <p>Example</p> <pre><code>sudo php client.php zones id=3\n</code></pre>","text":""},{"location":"modules/fmDNS/src/client.php/#install-url-only","title":"install url-only <p>In order to use URL resource records, you may want to install the client component on a server that is not a DNS server. This parameter will install the client app for URL RR use only.</p>  <p>Example</p> <pre><code>sudo php client.php install url-only\n</code></pre>","text":""},{"location":"modules/fmDNS/src/client.php/#enable-url","title":"enable url <p>An fmDNS client that has already been installed can get enabled to serve URL resource records.</p>  <p>Example</p> <pre><code>sudo php client.php enable url\n</code></pre>","text":""},{"location":"modules/fmDNS/src/client.php/#api-usage","title":"API Usage <p>The API can be invoked with the client app to manage records instead of using the web interface. While not as robust as the web interface, there are a number of supported parameters:</p> <pre><code>    setHost                  Invokes the API functionality\n    action=XX                Defines API action to take on a record (add, update, delete)\n    type=XX                  Defines the RR type (A, AAAA, CNAME, DNAME, MX, NS, PTR, TXT)\n    name=XX                  Defines the name of the RR\n    value=XX                 Defines the value of the RR\n    ttl=XX                   Defines the TTL of the RR\n    priority=XX              Defines the priority of the RR (MX only)\n    append=XX                Defines whether to append the domain or not (yes, no)\n    comment=XX               Defines the record comment\n    status=XX                Defines the record status (active, disabled)\n    newname=XX               Defines the new record name (when action=update)\n    newvalue=XX              Defines the new record value (when action=update)\n    reload=XX                Defines whether to reload the zone or not (yes, no)\n</code></pre>  <p>Note</p> <p><code>setHost</code> is a required parameter which invokes the API functionality.</p>   <p>Example</p> <pre><code>php client.php setHost id=36 action=add name=www value=1.2.3.4 type=A ttl=500 createPTR=yes comment=\"some comment\" status=active`\nphp client.php setHost id=36 action=update name=\"@\" newvalue=10.0.0.2 type=A reload=yes\n</code></pre>","text":""},{"location":"modules/fmDNS/src/settings/","title":"Settings","text":""},{"location":"modules/fmDNS/src/settings/#fmdns","title":"fmDNS","text":"<p>There are several settings available at Settings \u2192 fmDNS.</p> <p>_The fmDNS Manage Settings or Super Admin permission is required to change settings.</p>"},{"location":"modules/fmDNS/src/settings/#enable-named-checks","title":"Enable named Checks","text":"<p>Default: <code>disabled</code></p> <p>With named checks enabled, before any server configuration or zone reload occurs, fmDNS will parse through the configuration and run <code>named-checkconf</code> and/or <code>named-checkzone</code> against it.  If the configuration has no errors then it will be deployed to the DNS servers. Otherwise, error messages from the two utilities will be displayed and deployment will stop.</p> <p>This does require the two utilities to be installed on the web server and a sudoers entry added allowing the web server user to run them.</p> Debian-basedRedHat-based <pre><code>sudo apt install bind9\n</code></pre> <pre><code>sudo yum install bind9\n</code></pre> <p>Note</p> <p>The fmDNS Settings page will show what the sudoers file entry should look like.</p>"},{"location":"modules/fmDNS/src/settings/#purge-configuration-files","title":"Purge Configuration Files","text":"<p>Default: <code>disabled</code></p> <p>When enabled, configuration files will be deleted on the DNS servers before building the server config. This can be handy if you want to remove unused files.</p>"},{"location":"modules/fmDNS/src/settings/#use-defined-keys-with-rndc","title":"Use Defined Keys with rndc","text":"<p>Default: <code>disabled</code></p> <p>Use keys defined in named.conf.keys with rndc actions (each server can override this).</p>"},{"location":"modules/fmDNS/src/settings/#zone-filename-format","title":"Zone Filename Format","text":"<p>Default: <code>db.{ZONENAME}.hosts</code></p> <p>The filename structure for the zone files. <code>{ZONENAME}</code> will be replaced with the name of the zone.</p>"},{"location":"modules/fmDNS/src/settings/#create-reverse-zones-automatically","title":"Create Reverse Zones Automatically","text":"<p>Default: <code>disabled</code></p> <p>While creating A records and choosing to create the associated PTR record, reverse zones can be automatically created if they are missing.</p>"},{"location":"modules/fmDNS/src/settings/#use-dname-resource-records-for-clones","title":"Use DNAME Resource Records for Clones","text":"<p>Default: <code>enabled</code></p> <p>When creating cloned zones, use the DNAME resource record rather than a full clone (when available).</p>"},{"location":"modules/fmDNS/src/settings/#sort-zone-names-hierarchically","title":"Sort Zone Names Hierarchically","text":"<p>Default: <code>disabled</code></p> <p>Sort zone names with a hierarchy to group sub-zones together.</p> <p>For example: <pre><code>domain.com\nbar.domain.com\nfoo.bar.domain.com\n</code></pre></p>"},{"location":"modules/fmDNS/src/settings/#default-dnssec-signature-expiry","title":"Default DNSSEC Signature Expiry","text":"<p>Default: <code>30</code></p> <p>Define the number of days the DNSSEC signatures should be valid for (each zone can override this).</p>"},{"location":"modules/fmDNS/src/settings/#define-url-rr-web-servers","title":"Define URL RR Web Servers","text":"<p>Default: <code>none</code></p> <p>This feature will enable the fmDNS URL resource record which allows DNS records to redirect the user to a URL. For example:</p> <p><code>foo.bar.com  IN  URL  http://www.foobar.com/some/landing/page.html</code></p> <p>List the (public) IP addresses or hostnames the URL RRs should resolve to in order to handle the web redirects (semi-colon or comma delimited).</p>"},{"location":"modules/fmFirewall/","title":"Getting Started","text":"<p>Documentation Missing</p> <p>To be written.</p>"},{"location":"modules/fmSQLPass/","title":"Getting Started","text":"<p>Documentation Missing</p> <p>To be written.</p>"},{"location":"modules/fmSQLPass/src/settings/","title":"Settings","text":""},{"location":"modules/fmSQLPass/src/settings/#fmsqlpass","title":"fmSQLPass","text":"<p>There are a few settings available at Settings \u2192 fmSQLPass.</p> <p>The fmSQLPass Manage Settings or Super Admin permission is required to change settings.</p>"},{"location":"modules/fmSQLPass/src/settings/#minimum-password-strength","title":"Minimum Password Strength","text":"<p>Default: <code>Strong</code></p> <p>This setting restricts the new passwords to a minimum strength:</p> <p>Medium - The password must be at least seven (7) characters long containing letters and numbers.</p> <p>Strong - The password must be at least eight (8) characters long containing uppercase and lowercase letters, numbers, and special characters ('&amp;', '$', '@', etc.).</p>"},{"location":"modules/fmSQLPass/src/settings/#default-username","title":"Default Username","text":"<p>Default: <code>none</code></p> <p>Default database user to login as. This will be overridden if the user is defined at the server level.</p>"},{"location":"modules/fmSQLPass/src/settings/#default-password","title":"Default Password","text":"<p>Default: <code>none</code></p> <p>Default database user password to login with. This will be overridden if the password is defined at the server level.</p>"},{"location":"modules/fmWifi/getting-started/server-groups/","title":"Server Groups","text":"<p>If you have more than one server configured, then you can take advantage of the Server Groups which allows you to deploy the same configuration to multiple servers.</p> <p></p> <p>Once you have the group defined, you can specify it in when configuring a WLAN and configuration options.</p>"},{"location":"modules/fmWifi/getting-started/server-groups/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmWifi/getting-started/wlans/","title":"WLAN Management","text":"<p>All aspects of WLAN configuration takes place in the WLAN menu item. From there you can add, edit, and delete WLANs and options depending on your user permissions.</p>"},{"location":"modules/fmWifi/getting-started/wlans/#wlans","title":"WLANs","text":"<p>WLANs can be defined at WLAN \u2192 Manage. In the add/edit WLAN window, select and define the SSID, APs to serve the WLAN, mode, security, channel, and country options.</p> <p>Note</p> <p>If WPA is enabled, fmWifi will only configure WPA2.</p> <p>The Manage WLANs or Super Admin permission is required to add, edit, and delete WLANs.</p>"},{"location":"modules/fmWifi/getting-started/wlans/#options","title":"Options","text":"<p>Options can be defined globally or server-based which is controlled by the servers drop-down menu in the upper right. Currently, the options configuration is rudimentary and can be defined at Config \u2192 Options.</p> <p>Note</p> <p>Server-level options always supercede global options.</p> <p>The Server Management or Super Admin permission is required to manage WLAN options.</p>"},{"location":"modules/fmWifi/getting-started/wlans/#users","title":"Users","text":"<p>If you want to use individual user accounts, they need to be defined at WLAN \u2192 Users. Users allow unique passphrases for each connecting MAC address (client) to the WLAN. These will override the WLAN WPA2 passphrase which may or may not be included in the WLAN configuration which can be defined in the Settings.</p> <p>The Manage WLAN Users or Super Admin permission is required to manage views.</p>"},{"location":"modules/fmWifi/getting-started/wlans/#acls","title":"ACLs","text":"<p>Access Control Lists are defined at WLAN \u2192 ACLs to define which MAC addresses (clients) are allowed or denied access to the WLAN.</p> <p>When defining an ACL, specify the WLANs it applies to, the client MAC address, and the action.</p> <p>The Manage WLAN Users or Super Admin permission is required to manage ACLs.</p>"},{"location":"modules/fmWifi/getting-started/wlans/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"},{"location":"modules/fmWifi/src/client.php/","title":"Client.php","text":""},{"location":"modules/fmWifi/src/client.php/#fmwifi-parameters","title":"fmWifi Parameters","text":"<p>fmWifi has additional parameters that can be passed to <code>client.php</code> that are specific to this module.</p>"},{"location":"modules/fmWifi/src/client.php/#blockmac-address","title":"block=<code>&lt;MAC Address&gt;</code>","text":"<p>This parameter will block the specified MAC address from connecting to the access point.</p> <p>Example</p> <pre><code>sudo php client.php block=00:11:22:aa:bb:cc\n</code></pre>"},{"location":"modules/fmWifi/src/client.php/#-e-ebtables","title":"-e | ebtables","text":"<p>This parameter will block the specified MAC address from connecting to the access point using ebtables.</p> <p>Example</p> <pre><code>sudo php client.php block=00:11:22:aa:bb:cc -e\n</code></pre>"},{"location":"modules/fmWifi/src/client.php/#show-clients","title":"show-clients","text":"<p>This parameter will provide a list of connected clients.</p> <p>Example</p> <pre><code>sudo php client.php show-clients\n</code></pre>"},{"location":"modules/fmWifi/src/client.php/#status","title":"status","text":"<p>This parameter will show the current status of the access point.</p> <p>Example</p> <pre><code>sudo php client.php status\n</code></pre>"},{"location":"modules/fmWifi/src/client.php/#status-all","title":"status-all","text":"<p>This parameter will show the full status of the access point.</p> <p>Example</p> <pre><code>sudo php client.php status-all\n</code></pre>"},{"location":"modules/fmWifi/src/client.php/#-o-humanweb","title":"-o <code>&lt;(human|web)&gt;</code>","text":"<p>This parameter will format the output either for <code>human</code>-readable or for <code>web</code>. This is to be used with <code>show-clients</code>, <code>status</code>, and <code>status-all</code>.</p> <p>Example</p> <pre><code>sudo php client.php status -o web\n</code></pre>"},{"location":"modules/fmWifi/src/settings/","title":"Settings","text":""},{"location":"modules/fmWifi/src/settings/#fmwifi","title":"fmWifi","text":"<p>There are a few settings available at Settings \u2192 fmWifi.</p> <p>The fmWifi Manage Settings or Super Admin permission is required to change settings.</p>"},{"location":"modules/fmWifi/src/settings/#include-wlan-psk","title":"Include WLAN PSK","text":"<p>Default: <code>disabled</code></p> <p>Always include the WLAN PSK even when users are defined.</p>"},{"location":"modules/fmWifi/src/settings/#use-ebtables","title":"Use ebtables","text":"<p>Default: <code>enabled</code></p> <p>Block clients with <code>ebtables</code> in addition to deny list. The <code>ebtables</code> package is required on the access point (AP) and the AP must be configured as a bridge.</p> <p>This option is recommended for Raspbian systems.</p> <p>Note</p> <p>The ACL functionality of hostapd (<code>macaddr_acl</code>) does not seem to work with Raspbian. Therefore, the use of <code>ebtables</code> is recommended to deny clients.</p>"},{"location":"src/footer/","title":"Footer","text":""},{"location":"src/footer/#discussions","title":"Discussions","text":"<p>Questions or comments about this topic? Join the discussion here.</p>"}]}